C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:23: Error: Version 28 (intended for Android Pie and below) is the last version of the legacy support library, so we recommend that you migrate to AndroidX libraries when using Android Q and moving forward. The IDE can help with this: Refactor > Migrate to AndroidX... [GradleCompatible]
        implementation "com.android.support:support-v4:28.0.0"
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:24: Error: Version 28 (intended for Android Pie and below) is the last version of the legacy support library, so we recommend that you migrate to AndroidX libraries when using Android Q and moving forward. The IDE can help with this: Refactor > Migrate to AndroidX... [GradleCompatible]
        implementation "com.android.support:support-v13:28.0.0"
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:25: Error: Version 28 (intended for Android Pie and below) is the last version of the legacy support library, so we recommend that you migrate to AndroidX libraries when using Android Q and moving forward. The IDE can help with this: Refactor > Migrate to AndroidX... [GradleCompatible]
        implementation "com.android.support:cardview-v7:28.0.0"
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:26: Error: Version 28 (intended for Android Pie and below) is the last version of the legacy support library, so we recommend that you migrate to AndroidX libraries when using Android Q and moving forward. The IDE can help with this: Refactor > Migrate to AndroidX... [GradleCompatible]
        implementation "com.android.support:appcompat-v7:28.0.0"
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleCompatible":
   There are some combinations of libraries, or tools and libraries, that are
   incompatible, or can lead to bugs. One such incompatibility is compiling
   with a version of the Android support libraries that is not the latest
   version (or in particular, a version lower than your targetSdkVersion).

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\AndroidManifest.xml:32: Warning: Redundant label can be removed [RedundantLabel]
            android:label="@string/app_name" >
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantLabel":
   When an activity does not have a label attribute, it will use the one from
   the application tag. Since the application has already specified the same
   label, the label on this activity can be omitted.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:9: Warning: A newer version of com.android.tools.build:gradle than 7.3.1 is available: 7.4.0 [AndroidGradlePluginVersion]
        classpath 'com.android.tools.build:gradle:7.3.1'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\java\com\example\android\common\logger\LogView.java:25: Error: This custom view should extend android.support.v7.widget.AppCompatTextView instead [AppCompatCustomView]
public class LogView extends TextView implements LogNode {
                             ~~~~~~~~

   Explanation for issues of type "AppCompatCustomView":
   In order to support features such as tinting, the appcompat library will
   automatically load special appcompat replacements for the builtin widgets.
   However, this does not work for your own custom views.

   Instead of extending the android.widget classes directly, you should
   instead extend one of the delegate classes in
   androidx.appcompat.widget.AppCompatTextView.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\AndroidManifest.xml:30: Warning: As of Android 12, android:exported must be set; use true to make the activity available to other apps, and false otherwise. For launcher activities, this should be set to true. [IntentFilterExportedReceiver]
        <activity
         ~~~~~~~~

   Explanation for issues of type "IntentFilterExportedReceiver":
   Apps targeting Android 12 and higher are required to specify an explicit
   value for android:exported when the corresponding component has an intent
   filter defined. Otherwise, installation will fail. Set it to true to make
   this activity accessible to other apps, and false to limit it to be used
   only by this app or the OS. For launch activities, this should be set to
   true; otherwise, the app will fail to launch.

   Previously, android:exported for components without any intent filters
   present used to default to false, and when intent filters were present, the
   default was true. Defaults which change value based on other values are
   confusing and lead to apps accidentally exporting components as a
   side-effect of adding intent filters. This is a security risk, and we have
   made this change to avoid introducing accidental vulnerabilities.

   While the default without intent filters remains unchanged, it is now
   required to explicitly specify a value when intent filters are present. Any
   app failing to meet this requirement will fail to install on any Android
   version after Android 11.

   We recommend setting android:exported to false (even on previous versions
   of Android prior to this requirement) unless you have a good reason to
   export a particular component.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\build.gradle:67: Error: Google Play requires that apps target API level 31 or higher.
 [ExpiredTargetSdkVersion]
        targetSdkVersion 30
        ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ExpiredTargetSdkVersion":
   As of the second half of 2018, Google Play requires that new apps and app
   updates target API level 26 or higher.

   Configuring your app to target a recent API level ensures that users
   benefit from significant security and performance improvements, while still
   allowing your app to run on older Android versions (down to the
   minSdkVersion).

   To update your targetSdkVersion, follow the steps from "Meeting Google Play
   requirements for target API level",
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://support.google.com/googleplay/android-developer/answer/113469#targetsdk
   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values-v11: Warning: This folder configuration (v11) is unnecessary; minSdkVersion is 14. Merge all the resources in this folder into values. [ObsoleteSdkInt]
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values-v14: Warning: This folder configuration (v14) is unnecessary; minSdkVersion is 14. Merge all the resources in this folder into values. [ObsoleteSdkInt]

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\layout\layout_mainactivity.xml:2: Warning: This <FrameLayout> can be replaced with a <merge> tag [MergeRootFrame]
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
^

   Explanation for issues of type "MergeRootFrame":
   If a <FrameLayout> is the root of a layout and does not provide background
   or padding etc, it can often be replaced with a <merge> tag which is
   slightly more efficient. Note that this depends on context, so make sure
   you understand how the <merge> tag works before proceeding.

   https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\styles.xml:22: Warning: The resource R.style.AppBaseTheme appears to be unused [UnusedResources]
    <style name="AppBaseTheme" parent="android:Theme.Light.NoTitleBar">
           ~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:21: Warning: The resource R.dimen.margin_tiny appears to be unused [UnusedResources]
    <dimen name="margin_tiny">4dp</dimen>
           ~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:22: Warning: The resource R.dimen.margin_small appears to be unused [UnusedResources]
    <dimen name="margin_small">8dp</dimen>
           ~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:23: Warning: The resource R.dimen.margin_medium appears to be unused [UnusedResources]
    <dimen name="margin_medium">16dp</dimen>
           ~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:24: Warning: The resource R.dimen.margin_large appears to be unused [UnusedResources]
    <dimen name="margin_large">32dp</dimen>
           ~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:25: Warning: The resource R.dimen.margin_huge appears to be unused [UnusedResources]
    <dimen name="margin_huge">64dp</dimen>
           ~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:29: Warning: The resource R.dimen.horizontal_page_margin appears to be unused [UnusedResources]
    <dimen name="horizontal_page_margin">@dimen/margin_medium</dimen>
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-dimens.xml:30: Warning: The resource R.dimen.vertical_page_margin appears to be unused [UnusedResources]
    <dimen name="vertical_page_margin">@dimen/margin_medium</dimen>
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-styles.xml:28: Warning: The resource R.style.Widget appears to be unused [UnusedResources]
    <style name="Widget" />
           ~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-styles.xml:30: Warning: The resource R.style.Widget_SampleMessage appears to be unused [UnusedResources]
    <style name="Widget.SampleMessage">
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\values\template-styles.xml:35: Warning: The resource R.style.Widget_SampleMessageTile appears to be unused [UnusedResources]
    <style name="Widget.SampleMessageTile">
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\drawable-hdpi\tile.9.png: Warning: The resource R.drawable.tile appears to be unused [UnusedResources]

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.

   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests=true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests=true.

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\drawable-mdpi: Warning: Missing the following drawables in drawable-mdpi: tile.9.png (found in drawable-hdpi) [IconDensities]
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\drawable-xhdpi: Warning: Missing the following drawables in drawable-xhdpi: tile.9.png (found in drawable-hdpi) [IconDensities]
C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\res\drawable-xxhdpi: Warning: Missing the following drawables in drawable-xxhdpi: tile.9.png (found in drawable-hdpi) [IconDensities]

   Explanation for issues of type "IconDensities":
   Icons will look best if a custom version is provided for each of the major
   screen density classes (low, medium, high, extra high). This lint check
   identifies icons which do not have complete coverage across the densities.

   Low density is not really used much anymore, so this check ignores the ldpi
   density. To force lint to include it, set the environment variable
   ANDROID_LINT_INCLUDE_LDPI=true. For more information on current density
   usage, see https://developer.android.com/about/dashboards

   https://developer.android.com/guide/practices/screens_support.html

C:\Users\dbregovic\Fh-Projects\ContinuousIntegration\Android_CI\BasicMultitouch\Application\src\main\java\com\example\android\basicmultitouch\TouchDisplayView.java:133: Warning: Custom view TouchDisplayView overrides onTouchEvent but not performClick [ClickableViewAccessibility]
    public boolean onTouchEvent(MotionEvent event) {
                   ~~~~~~~~~~~~

   Explanation for issues of type "ClickableViewAccessibility":
   If a View that overrides onTouchEvent or uses an OnTouchListener does not
   also implement performClick and call it when clicks are detected, the View
   may not handle accessibility actions properly. Logic handling the click
   actions should ideally be placed in View#performClick as some accessibility
   services invoke performClick when a click action should occur.

6 errors, 22 warnings
